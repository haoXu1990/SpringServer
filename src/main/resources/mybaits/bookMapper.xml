<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xh.HiXiaoshuoserver.mapper.BookMapper">

    <resultMap id="bookResultMap" type="com.xh.HiXiaoshuoserver.domain.Book">

        <result column="book_id" property="bookID"/>
        <result column="book_name" property="bookName"/>
        <result column="book_author" property="bookAuthor"/>
        <result column="book_status" property="bookStatus"/>
        <result column="book_classify" property="bookClassify"/>
        <result column="book_catetime" property="bookCreatTime"/>
        <result column="book_abstract" property="bookAbstract"/>
        <result column="book_imageurl" property="bookImageUrl"/>
        <result column="book_number" property="bookNumber"/>
    </resultMap>



    <sql id="Base_Column_bookList">
      book_name,book_author,book_status,book_classify,book_catetime,book_abstract,book_imageurl
    </sql>

    <sql id="Base_Jindian_Column_bookList">
      book_author,book_status,book_classify,book_catetime,book_abstract,book_imageurl
    </sql>


    
    <select id="searching" resultMap="bookResultMap">

        select * from books where book_name like #{bookName} or book_author LIKE #{bookName} limit 20
    </select>
    
    <select id="getHotSearch" resultMap="bookResultMap">
      select * from books where books.book_name in (
        select book_name from (
          select distinct book_name from book_searching_hot where RAND() LIMIT 5
        ) AS  t

      )

    </select>

    <!--根据分类条件获取小说列表-->
    <select id="findBookbySubclassfy" resultMap="bookResultMap">

        select book_id,book_number,book_subclassify, <include refid="Base_Column_bookList"/> from books

        <where>

            <if test="classify !=null" >
                book_classify=#{classify}
            </if>

            <choose>
              <when test="subclassify !=null">
                and  book_subclassify=#{subclassify} and book_number between #{minNumber} and  #{maxNumber}
              </when>

              <otherwise>
                  and book_number between #{minNumber} and  #{maxNumber}
              </otherwise>
            </choose>


            <choose>

                <!--按照点击排序-->
                <when test="sortType !=null " >
                    AND books.book_id in (
                    select  book_id from
                    book_click_total  GROUP BY book_id order by  SUM(book_click_cnt) DESC
                    )
                </when>

                <!--按照收藏排序-->
                <otherwise>
                    AND books.book_id in (
                    select  book_id from
                    book_collect_total  GROUP BY book_id order by  SUM(book_collect_cnt) DESC
                    )
                </otherwise>

            </choose>

        </where>


    </select>

<!--根据点击排行获取获取小说列表-->
    <select id="findByPage" resultMap="bookResultMap" useCache="false">
        select p.*
        from (select books.book_id,
        <include refid="Base_Column_bookList"/>, (select book_clickcount from book_click_rank where book_id = books.book_id)
        as clickcount from books
        <where>

            <!--分类查询-->
            <if test="classify != null">
                books.book_classify = #{classify}
            </if>

            <!--男频-->
            <if test="male != null" >
                books.book_classify in ('玄幻魔法', '武侠修真', '侦探推理', '历史军事', '其他类型', '恐怖灵异','科幻小说', '网游动漫')
            </if>

            <!--女频-->
            <if test="female != null">
                books.book_classify in ('都市言情', '其他类型', '恐怖灵异', '穿越小说','散文诗词', '科幻小说')
            </if>
        </where>



        )
        as p order by p.clickcount desc
    </select>

    
    
    <!--新接口-->
    <select id="findBooks" resultMap="bookResultMap" useCache="false">

        select book_id,book_number, <include refid="Base_Column_bookList"/>

        from books
        <where>

            <choose>
                <when test="book_classify == '男生' ">
                    books.book_classify in ('玄幻奇幻', '武侠仙侠', '历史军事', '科幻灵异', '游戏竞技')

                </when>

                <when test="book_classify == '女生' ">
                    books.book_classify in ('言情女生', '科幻灵异', '都市青春')
                </when>

                <when test="book_classify != null">
                    books.book_classify in (#{book_classify})
                </when>


            </choose>


            <if test="book_recommend_tag != null">
                AND INSTR(books.book_subject, #{book_recommend_tag})>0
            </if>

            <if test="book_status != null" >
                AND books.status = #{book_status}
            </if>

            <if test="random_number != 0">
                ORDER BY RAND() LIMIT #{random_number}
            </if>


            <if test="click_total != null and time_condition != null">
                AND books.book_id in (
                SELECT book_id from (
                select  sum(book_click_cnt), book_id from
                book_click_total where book_click_time between #{time_condition} and NOW() GROUP BY book_id order by  SUM(book_click_cnt) DESC
                ) as t
                )
            </if>




        </where>


    </select>
    
</mapper>